# Workflow for deploying a Jekyll site with a separate Node.js backend job
name: Deploy Jekyll with Node.js Backend

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job for Jekyll and Node.js backend
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Install Node.js dependencies
        run: |
          cd backend
          rm -f package-lock.json
          npm install --unsafe-perm

      - name: Build Node.js project
        run: |
          cd backend
          npm run build  # Ensure your backend has a build script in package.json

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3

  # Deployment job for GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Separate backend job with a new runner
  start-backend:
    runs-on: ubuntu-latest
    needs: deploy  # This job runs only after the deployment job succeeds
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js dependencies
        run: |
          cd backend
          rm -f package-lock.json
          npm install --unsafe-perm

      - name: Start Backend Node.js Server
        run: |
          cd backend
          npm run dev  # Ensure the start script or dev script is defined in package.json
